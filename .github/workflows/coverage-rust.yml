name: Rust Test Coverage

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-coverage:
    name: Test coverage
    runs-on: ubuntu-latest-4-cores
    env:
      CXX: clang++-11
      CLANG_CXX: clang++-11
      GCC_CXX: g++-10
      GCOV: gcov-10
    continue-on-error: true

    steps:
      - name: Prepare C toolchains
        run: |
          # Add LLVM keys
          curl -o- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -

          # Add extra APT repos
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'
          sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main'
          sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'

          # Install toolchains
          sudo apt-get update
          sudo apt-get install -y clang-11 g++-10

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust
        run: |
          rustup toolchain add nightly --component llvm-tools-preview
          rustup override set nightly
          cargo install grcov

      - name: Configure cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            quadratic-core/target/
          key: test-${{ runner.os }}-cargo-gcc-10-clang-11-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        env:
          RUSTFLAGS: -Cinstrument-coverage
        run: |
          cd quadratic-core
          cargo build

      - name: Test
        env:
          LLVM_PROFILE_FILE: grcov-%p-%m.profraw
          RUSTFLAGS: -Cinstrument-coverage
        run: |
          cd quadratic-core
          cargo test

      - name: Generate coverage
        run: |
          grcov $(find . -name "grcov-*.profraw" -print) \
            --branch \
            --ignore-not-existing \
            --binary-path ./target/debug/ \
            -s . \
            -t lcov \
            --ignore "/*" \
            -o lcov.info
