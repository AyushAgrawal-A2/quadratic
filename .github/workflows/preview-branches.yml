name: Deploy Preview Branch

on:
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest-8-cores
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Set up Rust
      uses: moonrepo/setup-rust@v1
      with:
        cache: false
    - uses: jetli/wasm-pack-action@v0.4.0
      with:
        version: 'latest'

    - name: Install Dependencies
      run: |
        cd quadratic-client
        npm install

    - name: Build
      run: |
        cd quadratic-client
        npm run build:wasm:javascript
        npm run build:wasm:types
        npm run build
      env:
        VITE_ENVIRONMENT: preview
        VITE_QUADRATIC_API_URL: https://quadratic-api-dev-pr-${{ github.event.pull_request.number }}.herokuapp.com
        VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
        VITE_AUTH0_CLIENT_ID: ${{ secrets.VITE_AUTH0_CLIENT_ID }}
        VITE_AUTH0_AUDIENCE: ${{ secrets.VITE_AUTH0_AUDIENCE }}
        VITE_AUTH0_ISSUER: ${{ secrets.VITE_AUTH0_ISSUER }}
        VITE_AUTH0_DOMAIN: ${{ secrets.VITE_AUTH0_DOMAIN }}


    # - name: Deploy to AWS S3
    #   run: aws s3 sync dist s3://your-s3-bucket-name --delete
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # - name: Invalidate CloudFront Distribution
    #   run: aws cloudfront create-invalidation --distribution-id your-distribution-id --paths "/*"
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # - name: Post Deployment URL to PR
    #   if: github.event_name == 'pull_request'
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     DEPLOY_URL: "https://your-cloudfront-distribution-url.com/prs/${{ github.head_ref }}"
    #   run: |
    #     PR_COMMENT="Deployment is ready! ðŸš€\n\nPreview: $DEPLOY_URL"
    #     PAYLOAD=$(echo '{}' | jq --arg body "$PR_COMMENT" '.body = $body')
    #     COMMENTS_URL=$(jq -r .pull_request.comments_url < "$GITHUB_EVENT_PATH")
    #     curl -s -S -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/json" --data "$PAYLOAD" "$COMMENTS_URL"
